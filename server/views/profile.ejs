<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>User Profile - AutoCode</title>
        <style>
            body {
                font-family: "Courier New", monospace;
                line-height: 1.6;
                color: #ffffff;
                margin: 0;
                padding: 0;
                background: linear-gradient(135deg, #000000, #0000ff);
            }
            .container {
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }
            h1,
            h2 {
                color: #00ffff;
                text-align: center;
            }
            .profile-info,
            .edit-form,
            .license-usage,
            .subscription-info,
            .device-info {
                background-color: rgba(0, 0, 0, 0.6);
                padding: 20px;
                border-radius: 10px;
                margin-bottom: 20px;
            }
            .profile-info p,
            .license-usage p,
            .subscription-info p,
            .device-info p {
                margin: 10px 0;
            }
            .edit-form input,
            .edit-form select {
                width: 100%;
                padding: 10px;
                margin-bottom: 10px;
                background-color: rgba(255, 255, 255, 0.1);
                border: 1px solid #00ffff;
                color: #ffffff;
            }
            .edit-form button,
            .upgrade-button,
            .cancel-subscription {
                background-color: #00ffff;
                color: #000000;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-weight: bold;
            }
            .edit-form button:hover,
            .upgrade-button:hover,
            .cancel-subscription:hover {
                background-color: #0000ff;
                color: #ffffff;
            }
            .upgrade-button,
            .cancel-subscription {
                display: inline-block;
                text-decoration: none;
                margin-top: 20px;
            }
            .progress-bar {
                width: 100%;
                background-color: #ddd;
                border-radius: 5px;
            }
            .progress {
                width: 0%;
                height: 20px;
                background-color: #00ffff;
                border-radius: 5px;
                transition: width 0.5s ease-in-out;
            }
            .device-list {
                list-style-type: none;
                padding: 0;
            }
            .device-list li {
                margin-bottom: 5px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>User Profile</h1>
            <div class="profile-info">
                  <p><strong>Email:</strong> <%= user.email %></p>
                <p><strong>Tier:</strong> <%= user.tier %></p>
            </div>

            <div class="edit-form">
                <h2>Edit Profile</h2>
                <form id="updateProfileForm">
                    <input type="email" id="email" name="email" value="<%= user.email %>" required />
                    <button type="submit">Update Profile</button>
                </form>
            </div>

            <div class="license-usage">
                <h2>License Usage</h2>
                <p>Requests today: <span id="requestsToday"></span> / <span id="dailyLimit"></span></p>
                <div class="progress-bar">
                    <div class="progress" id="usageProgress"></div>
                </div>
            </div>

            <div class="subscription-info">
                <h2>Subscription Information</h2>
                <p>Current Tier: <span id="currentTier"></span></p>
                <p>Subscription Status: <span id="subscriptionStatus"></span></p>
                <% if (user.tier === 'Free') { %>
                <a href="/payment/create-checkout-session" class="upgrade-button">Upgrade to Premium</a>
                <% } else if (user.tier === 'Premium') { %>
                <button id="cancelSubscription" class="cancel-subscription">Cancel Subscription</button>
                <% } %>
            </div>

            <div class="device-info">
                <h2>Device Information</h2>
                <p>Devices: <span id="deviceCount"></span> / <span id="deviceLimit"></span></p>
                <ul id="deviceList" class="device-list"></ul>
            </div>
        </div>

        <script>
            document.getElementById("updateProfileForm").addEventListener("submit", async (e) => {
                e.preventDefault();
                const email = document.getElementById("email").value;
                try {
                    const response = await fetch("/profile", {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ email }),
                    });
                    if (response.ok) {
                        alert("Profile updated successfully");
                        location.reload();
                    } else {
                        alert("Failed to update profile");
                    }
                } catch (error) {
                    console.error("Error:", error);
                    alert("An error occurred while updating the profile");
                }
            });

            async function fetchLicenseUsage() {
                try {
                    const response = await fetch("/profile/usage");
                    if (response.ok) {
                        const data = await response.json();
                        document.getElementById("requestsToday").textContent = data.dailyRequests;
                        document.getElementById("dailyLimit").textContent = data.requestLimit;
                        const usagePercentage = (data.dailyRequests / data.requestLimit) * 100;
                        document.getElementById("usageProgress").style.width = `${usagePercentage}%`;
                    }
                } catch (error) {
                    console.error("Error fetching license usage:", error);
                }
            }

            async function fetchSubscriptionInfo() {
                try {
                    const response = await fetch("/profile/subscription");
                    if (response.ok) {
                        const data = await response.json();
                        document.getElementById("currentTier").textContent = data.tier;
                        document.getElementById("subscriptionStatus").textContent = data.subscription
                            ? "Active"
                            : "Inactive";
                    }
                } catch (error) {
                    console.error("Error fetching subscription info:", error);
                }
            }

            async function fetchDeviceInfo() {
                try {
                    const response = await fetch("/profile/devices");
                    if (response.ok) {
                        const data = await response.json();
                        document.getElementById("deviceCount").textContent = data.devices.length;
                        document.getElementById("deviceLimit").textContent = data.deviceLimit;
                        const deviceList = document.getElementById("deviceList");
                        deviceList.innerHTML = "";
                        data.devices.forEach((device) => {
                            const li = document.createElement("li");
                            li.textContent = device;
                            deviceList.appendChild(li);
                        });
                    }
                } catch (error) {
                    console.error("Error fetching device info:", error);
                }
            }

            document.getElementById("cancelSubscription")?.addEventListener("click", async () => {
                if (confirm("Are you sure you want to cancel your subscription?")) {
                    try {
                        const response = await fetch("/profile/subscription/cancel", {
                            method: "POST",
                        });
                        if (response.ok) {
                            alert("Subscription cancelled successfully");
                            location.reload();
                        } else {
                            alert("Failed to cancel subscription");
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        alert("An error occurred while cancelling the subscription");
                    }
                }
            });

            fetchLicenseUsage();
            fetchSubscriptionInfo();
            fetchDeviceInfo();
            setInterval(fetchLicenseUsage, 60000);
        </script>
    </body>
</html>
